{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  addUser(user) {\n    return this.http.post('http://localhost:3000/users', user).subscribe();\n  }\n  login(user) {\n    return this.http.get('http://localhost:3000/users?username=' + user.username + '&password=' + user.password);\n  }\n  logout() {\n    this.user = undefined;\n    localStorage.removeItem('user');\n  }\n  saveUser() {\n    localStorage.setItem('user', '' + this.user?.id);\n  }\n  getSavedUser() {\n    return localStorage.getItem('user');\n  }\n  isUserConnected() {\n    if (this.user) {\n      this.saveUser();\n      return true;\n    } else if (this.getSavedUser()) {\n      this.getSavedUserInfo().subscribe(user => {\n        this.user = user[0];\n        return true;\n      });\n    }\n    return false;\n  }\n  getSavedUserInfo() {\n    return this.http.get('http://localhost:3000/users?id=' + this.getSavedUser());\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","addUser","user","post","subscribe","login","get","username","password","logout","undefined","localStorage","removeItem","saveUser","setItem","id","getSavedUser","getItem","isUserConnected","getSavedUserInfo","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/nour/Documents/x-max-dev-deux/Angular-quizz-group/src/app/auth/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user: { id: number; username: string; } | undefined;\n\n  constructor(private http: HttpClient) { }\n\n  addUser(user: { username: string; password: string; }) {\n    return this.http.post('http://localhost:3000/users', user).subscribe();\n  }\n\n  login(user: { username: string; password: string; }) {\n    return this.http.get('http://localhost:3000/users?username=' + user.username + '&password=' + user.password);\n  }\n\n  logout() {\n    this.user = undefined;\n    localStorage.removeItem('user');\n  }\n\n  saveUser() {\n    localStorage.setItem('user', '' + this.user?.id);\n  }\n\n  getSavedUser() {\n    return localStorage.getItem('user');\n  }\n\n  isUserConnected() {\n    if (this.user) {\n      this.saveUser();\n      return true;\n    } else if (this.getSavedUser()) {\n      this.getSavedUserInfo().subscribe((user: any) => {\n        this.user = user[0];\n        return true;\n      });\n    }\n    return false;\n  }\n\n  private getSavedUserInfo() {\n    return this.http.get('http://localhost:3000/users?id=' + this.getSavedUser());\n  }\n}\n"],"mappings":";;;AAMA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,OAAOA,CAACC,IAA6C;IACnD,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,6BAA6B,EAAED,IAAI,CAAC,CAACE,SAAS,EAAE;EACxE;EAEAC,KAAKA,CAACH,IAA6C;IACjD,OAAO,IAAI,CAACF,IAAI,CAACM,GAAG,CAAC,uCAAuC,GAAGJ,IAAI,CAACK,QAAQ,GAAG,YAAY,GAAGL,IAAI,CAACM,QAAQ,CAAC;EAC9G;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACP,IAAI,GAAGQ,SAAS;IACrBC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAC,QAAQA,CAAA;IACNF,YAAY,CAACG,OAAO,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,CAACZ,IAAI,EAAEa,EAAE,CAAC;EAClD;EAEAC,YAAYA,CAAA;IACV,OAAOL,YAAY,CAACM,OAAO,CAAC,MAAM,CAAC;EACrC;EAEAC,eAAeA,CAAA;IACb,IAAI,IAAI,CAAChB,IAAI,EAAE;MACb,IAAI,CAACW,QAAQ,EAAE;MACf,OAAO,IAAI;KACZ,MAAM,IAAI,IAAI,CAACG,YAAY,EAAE,EAAE;MAC9B,IAAI,CAACG,gBAAgB,EAAE,CAACf,SAAS,CAAEF,IAAS,IAAI;QAC9C,IAAI,CAACA,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;QACnB,OAAO,IAAI;MACb,CAAC,CAAC;;IAEJ,OAAO,KAAK;EACd;EAEQiB,gBAAgBA,CAAA;IACtB,OAAO,IAAI,CAACnB,IAAI,CAACM,GAAG,CAAC,iCAAiC,GAAG,IAAI,CAACU,YAAY,EAAE,CAAC;EAC/E;;SAzCWlB,WAAW;;mBAAXA,MAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXzB,MAAW;EAAA0B,OAAA,EAAX1B,MAAW,CAAA2B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}